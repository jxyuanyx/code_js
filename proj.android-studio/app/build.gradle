import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'  // Google Services plugin

android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion PROP_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.classic.solitairemaster"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
//diff0
        versionCode 201 
        versionName "5.0"
//diffend0
        flavorDimensions "versionCode"
        manifestPlaceholders = [
                CHANNEL_VALUE: "GPID_And_005",
        ]
        //topon
        multiDexEnabled true



        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'

                    def module_paths = [project.file("../../../cocos2d-x"),
                                        project.file("../../../cocos2d-x/cocos"),
                                        project.file("../../../cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }
                    
                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
                }
            }
        }
    }

    ////topon 指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets.main {
        java.srcDirs "../src", "src"
        res.srcDirs "../res", 'res'
        jniLibs.srcDirs "../libs", 'libs'
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

//diff1
    productFlavors {

        id_gp_online {
            applicationId = "com.classic.solitairemaster"
            manifestPlaceholders = [
                    CHANNEL_VALUE: "GPID_And_005"
            ]
        }

        id_test{

            applicationId = "com.classic.solitairemaster"
            manifestPlaceholders = [
                    CHANNEL_VALUE: "GPID_And_005",
                    TEST_VALUE:"T"
            ]
        }

        id_1_test{
            applicationId = "com.classic.solitairemaster"
            manifestPlaceholders = [
                    CHANNEL_VALUE: "GPID_And_012",
                    CPNAME:"package_1",
                    TEST_VALUE:"T"
            ]
        }

        id_1{
            applicationId = "com.classic.solitairemaster"
            manifestPlaceholders = [
                    CHANNEL_VALUE: "GPID_And_012",
                    CPNAME:"package_1",
            ]
        }
    }

    sourceSets.main {
        java.srcDirs "../src", "src"
        res.srcDirs "../res", 'res'
        jniLibs.srcDirs "../libs", 'libs'
        manifest.srcFile "AndroidManifest.xml"
    }

    sourceSets.id_1 {
        res.srcDirs = ['../res_1']
    }

    sourceSets.id_1_test {
        res.srcDirs = ['../res_1']
    }
//diffend1


    signingConfigs {

        release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }


    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }

            applicationVariants.all { variant ->
                variant.outputs.all{
//diff2				
                    outputFileName="${variant.productFlavors[0].name}-${variant.buildType.name}-${defaultConfig.versionName}.apk".toLowerCase()
//diffend2
				}
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', 'matchbattle/mainbgm.mp3', 'snakebattle/mainbgm.mp3']
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }
}
//def unityDir = "${buildDir}/../../../../../.."
//println(">>>> ${buildDir}")
//println(">>>> ${outputDir}")


println(">>>> 123123")

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

    variant.mergeAssets.doLast {
        def sourceDir = "${buildDir}/../../../../.."
        //def unityDir = "../${buildDir}"

        copy {
            from "${sourceDir}/assets"
            into "${outputDir}/assets"
        }
        /*
        copy {
            from "${unityDir}/unity/assets"
            into "${outputDir}/"
        }*/

        copy {
            from "${sourceDir}/src"
            into "${outputDir}/src"
        }

        copy {
            from "${sourceDir}/jsb-adapter"
            into "${outputDir}/jsb-adapter"
        }

        copy {
            from "${sourceDir}/main.js"
            from "${sourceDir}/project.json"
            into outputDir
        }
    }
}

//topon
repositories {
    flatDir {
        dirs 'libs'
    }
    //Anythink(Core)
    maven {
        url "https://anythink.jfrog.io/artifactory/android_sdk"
    }


    //Mintegral
    maven {
        url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea"
    }

    //Ironsource
    maven {
        url "https://android-sdk.is.com/"
    }
//    //Vungle
    maven {
        url "https://s01.oss.sonatype.org/content/groups/staging/"
    }
    //Pangle
    maven {
        url "https://artifact.bytedance.com/repository/pangle"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: '../libs')
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation fileTree(include: ['*.jar'], dir: '../../../cocos2d-x/cocos/platform/android/java/libs')
    implementation project(':libcocos2dx')
    implementation project(':pictureselector')
    implementation project(':platformlib')
    implementation project(':unityLibrary')
    implementation fileTree(include: ['*.jar'], dir: '../unityLibrary/libs')

    implementation 'androidx.fragment:fragment:1.3.4'
    implementation 'com.facebook.android:facebook-android-sdk:[8,9)'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.google.firebase:firebase-auth:17.0.0'
    implementation 'com.google.code.gson:gson:2.8.7'

    implementation 'com.appsflyer:af-android-sdk:6.3.2'

    //************************ajust******************************
    implementation 'com.adjust.sdk:adjust-android:4.28.2'
    implementation 'com.android.installreferrer:installreferrer:2.2'
// Add the following if you are using the Adjust SDK inside web views on your app
    implementation 'com.adjust.sdk:adjust-android-webbridge:4.28.2'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.1'

    //*********************topOn  start**************************************
    api fileTree(include: ['*.jar','*.aar'], dir: 'libs')

    //Anythink (Necessary)
    api "com.anythink.sdk:core:5.9.62"
    api "com.anythink.sdk:nativead:5.9.62"
    api "com.anythink.sdk:banner:5.9.62"
    api "com.anythink.sdk:interstitial:5.9.62"
    api "com.anythink.sdk:rewardedvideo:5.9.62"
    api "com.anythink.sdk:splash:5.9.62"

    //Androidx (Necessary)
    api "androidx.appcompat:appcompat:1.1.0"

    //AppLovin
    api "com.anythink.sdk:adapter-applovin:5.9.62"
    api "com.applovin:applovin-sdk:11.3.3"

    //Mintegral
    api "com.anythink.sdk:adapter-mintegral-nonchina:5.9.62"
    api "com.mbridge.msdk.oversea:reward:16.1.11"
    api "com.mbridge.msdk.oversea:newinterstitial:16.1.11"
    api "com.mbridge.msdk.oversea:mbnative:16.1.11"
    api "com.mbridge.msdk.oversea:interstitial:16.1.11"
    api "com.mbridge.msdk.oversea:mbsplash:16.1.11"
    api "com.mbridge.msdk.oversea:mbnativeadvanced:16.1.11"
    api "com.mbridge.msdk.oversea:mbbanner:16.1.11"
    api "com.mbridge.msdk.oversea:mbbid:16.1.11"
    api "androidx.recyclerview:recyclerview:1.1.0"

    //UnityAds
    api "com.anythink.sdk:adapter-unityads:5.9.62"
    api "com.unity3d.ads:unity-ads:4.2.0"

    //Vungle
    api "com.anythink.sdk:adapter-vungle:5.9.62"
    api "com.vungle:publisher-sdk-android:6.10.5"
    api "androidx.core:core:1.3.2"
    api "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"
    api "com.google.android.gms:play-services-basement:17.5.0"
//    api "com.google.android.gms:play-services-ads-identifier:17.0.0"

    //Ironsource
    api "com.anythink.sdk:adapter-ironsource:5.9.62"
    api "com.ironsource.sdk:mediationsdk:7.2.0"
    api "com.google.android.gms:play-services-appset:16.0.0"
//    api "com.google.android.gms:play-services-ads-identifier:17.0.0"
    api "com.google.android.gms:play-services-basement:17.1.1"

    //Inmobi
    api "com.anythink.sdk:adapter-inmobi:5.9.62"
    api "com.inmobi.monetization:inmobi-ads:10.0.5"
    api "com.squareup.picasso:picasso:2.71828"
    api "androidx.browser:browser:1.3.0"
    api "androidx.recyclerview:recyclerview:1.1.0"
//    api "com.google.android.gms:play-services-ads-identifier:17.0.0"

    //Fyber
    api "com.anythink.sdk:adapter-fyber:5.9.62"
    api "com.fyber:marketplace-sdk:8.1.2"
//    api "com.google.android.gms:play-services-ads-identifier:17.0.0"
    //Pangle
    api "com.anythink.sdk:adapter-pangle-nonchina:5.9.62"
    api "com.pangle.global:ads-sdk:4.3.0.8"
    api "com.google.android.gms:play-services-ads-identifier:17.0.0"

    //Facebook
    api "com.anythink.sdk:adapter-facebook:5.9.62"
    api "com.facebook.android:audience-network-sdk:6.10.0"
    api "androidx.annotation:annotation:1.0.0"
    //*********************topOn  end**************************************
}